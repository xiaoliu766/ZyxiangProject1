<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyx.system.mapper.SysChatMapper">

    <resultMap type="SysChat" id="SysChatResult">
        <result property="chatId"    column="chat_id"    />
        <result property="stuId"    column="stu_id"    />
        <result property="expertId"    column="expert_id"    />
        <result property="state"    column="state"    />
        <result property="content"    column="content"    />
        <result property="createTime"    column="create_time"    />
        <association property="student" column="stu_id" javaType="SysStudent" resultMap="SysStudentResult" />
        <association property="expert" column="expert_id" javaType="SysExpert" resultMap="SysExpertResult" />
    </resultMap>

    <resultMap type="SysStudent" id="SysStudentResult">
        <result property="stuId"    column="stu_id"    />
        <result property="stuNo"    column="stu_no"    />
        <result property="stuPassword"    column="stu_password"    />
        <result property="stuName"    column="stu_name"    />
        <result property="stuSex"    column="stu_sex"    />
        <result property="stuAddress"    column="stu_address"    />
        <result property="stuAge"    column="stu_age"    />
        <result property="stuScore"    column="stu_score"    />
        <result property="stuEmail"    column="stu_email"    />
        <result property="stuPhone"    column="stu_phone"    />
        <result property="stuPostcode"    column="stu_postcode"    />
        <result property="provinceName"    column="province_name"    />
        <result property="cityName"    column="city_name"    />
        <result property="ranking"    column="ranking"    />
        <result property="physics"    column="physics"    />
        <result property="chemistry"    column="chemistry"    />
        <result property="biology"    column="biology"    />
        <result property="optional"    column="optional"    />
    </resultMap>

    <resultMap type="SysExpert" id="SysExpertResult">
        <result property="expertId"    column="expert_id"    />
        <result property="expertName"    column="expert_name"    />
        <result property="expertUser"    column="expert_user"    />
        <result property="expertPassword"    column="expert_password"    />
        <result property="expertAge"    column="expert_age"    />
        <result property="expertSex"    column="expert_sex"    />
        <result property="expertAvatar"    column="expert_avatar"    />
        <result property="expertFlag"    column="expert_flag"    />
        <result property="expertInfo"    column="expert_info"    />
    </resultMap>

    <sql id="selectSysChatVo">
        select chat_id, stu_id, expert_id, state, content, create_time from sys_chat
    </sql>

    <sql id="selectMyselfChatVo">
        select c.chat_id, c.state,
            s.stu_name, s.stu_sex, s.stu_email, s.stu_score, s.ranking, physics, chemistry,
            biology, politics, history, geography, s.province_name, s.city_name, s.optional,
            e.expert_name, e.expert_age, e.expert_avatar, e.expert_sex
        from sys_chat c
        left join sys_student s on c.stu_id = s.stu_id
        left join sys_expert e on c.expert_id = e.expert_id
    </sql>

    <select id="selectSysChatList" parameterType="SysChat" resultMap="SysChatResult">
        <include refid="selectSysChatVo"/>
        <where>
            <if test="stuId != null  and stuId != ''"> and stu_id = #{stuId}</if>
            <if test="expertId != null  and expertId != ''"> and expert_id = #{expertId}</if>
            <if test="state != null  and state != ''"> and state = #{state}</if>
            <if test="content != null  and content != ''"> and content = #{content}</if>
        </where>
    </select>

    <select id="selectSysChatById" parameterType="Long" resultMap="SysChatResult">
        <include refid="selectSysChatVo"/>
        where chat_id = #{chatId}
    </select>
    <select id="selectMyself" resultMap="SysChatResult">
        <include refid="selectMyselfChatVo" />
        <where>
            <if test="stuId != null and stuId != ''">and s.stu_id = #{stuId}</if>
            <if test="expertId != null and expertId != ''">and e.expert_id = #{expertId}</if>
        </where>
    </select>

    <insert id="insertSysChat" parameterType="SysChat" useGeneratedKeys="true" keyProperty="chatId">
        insert into sys_chat
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stuId != null and stuId != ''">stu_id,</if>
            <if test="expertId != null and expertId != ''">expert_id,</if>
            <if test="state != null">state,</if>
            <if test="content != null">content,</if>
            <if test="createTime != null">create_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stuId != null and stuId != ''">#{stuId},</if>
            <if test="expertId != null and expertId != ''">#{expertId},</if>
            <if test="state != null">#{state},</if>
            <if test="content != null">#{content},</if>
            <if test="createTime != null">#{createTime},</if>
        </trim>
    </insert>

    <update id="updateSysChat" parameterType="SysChat">
        update sys_chat
        <trim prefix="SET" suffixOverrides=",">
            <if test="stuId != null and stuId != ''">stu_id = #{stuId},</if>
            <if test="expertId != null and expertId != ''">expert_id = #{expertId},</if>
            <if test="state != null">state = #{state},</if>
            <if test="content != null">content = #{content},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where chat_id = #{chatId}
    </update>

    <delete id="deleteSysChatById" parameterType="Long">
        delete from sys_chat where chat_id = #{chatId}
    </delete>

    <delete id="deleteSysChatByIds" parameterType="String">
        delete from sys_chat where chat_id in
        <foreach item="chatId" collection="array" open="(" separator="," close=")">
            #{chatId}
        </foreach>
    </delete>
</mapper>